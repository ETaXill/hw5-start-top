// Generated by LiveScript 1.3.1
(function(){
  var CurrentSum, addHandlerOnControlRingButtons, addHandler, addHandlerOnInfoButton, addResetFunction, reset, addRobotButton, randomSequence, showSequence;
  $(function(){
    var currentSum;
    currentSum = new CurrentSum;
    addHandlerOnControlRingButtons(currentSum);
    addHandlerOnInfoButton(currentSum);
    addResetFunction(currentSum);
    return addRobotButton(currentSum);
  });
  CurrentSum = function(){
    this.sum = 0;
  };
  addHandlerOnControlRingButtons = function(currentSum){
    var i$, ref$, len$, button;
    for (i$ = 0, len$ = (ref$ = $('.button')).length; i$ < len$; ++i$) {
      button = ref$[i$];
      $(button).addClass('unvisit');
      button.status = 'unclick';
      addHandler(button, currentSum);
      $(button).click(fn$);
    }
    function fn$(event){
      event.stopPropagation();
      $(this).trigger('handler');
    }
  };
  addHandler = function(button, currentSum){
    $(button).bind('handler', function(event){
      var this$ = this;
      event.stopPropagation();
      if (this.status === 'clicked' || $(this).hasClass('visited')) {
        return;
      }
      this.status = 'clicked';
      $(this).children('.unread').addClass("visiable").text('...');
      return $.get('/', function(data, status){
        var flag, i$, ref$, len$, bt;
        if (this$.status === 'unclick') {
          return;
        }
        $(this$).children('.unread').text(data);
        currentSum.sum += parseInt(data);
        if (this$.status === 'clicked') {
          $(this$).removeClass('unvisit').addClass('visited');
        }
        flag = true;
        for (i$ = 0, len$ = (ref$ = $('.button')).length; i$ < len$; ++i$) {
          bt = ref$[i$];
          if ($(bt).hasClass('unvisit')) {
            flag = false;
            break;
          }
        }
        if (flag === true) {
          $('#info').removeClass('visited').addClass('unvisit').trigger('handler');
        }
        if (this$.nextButton === undefined) {
          $('#info').trigger('handler');
        } else if (this$.nextButton !== false) {
          $('li' + (":nth-child(" + this$.nextButton + ")")).trigger('handler');
        }
      });
    });
  };
  addHandlerOnInfoButton = function(currentSum){
    var info;
    info = $('#info');
    info[0].status = 'unclick';
    info.addClass('visited');
    info.bind('handler', function(event){
      event.stopPropagation();
      if (this.status === 'clicked' || $(this).hasClass('visited')) {
        return;
      }
      this.status = 'clicked';
      return $(this).removeClass('unvisit').addClass('visited').text(currentSum.sum);
    });
    info.click(function(event){
      event.stopPropagation();
      return $(this).trigger('handler');
    });
  };
  addResetFunction = function(currentSum){
    $('#button').on('mouseleave', function(){
      setTimeout(reset(currentSum, 0));
    });
  };
  reset = function(currentSum){
    var i$, ref$, len$, bt;
    for (i$ = 0, len$ = (ref$ = $('.button')).length; i$ < len$; ++i$) {
      bt = ref$[i$];
      bt.status = 'unclick';
      bt.nextButton = false;
      $(bt).removeClass('visited').addClass('unvisit');
      $(bt).children('.unread').removeClass('visiable');
    }
    $('#info').get(0).status = 'unclick';
    $('#info').removeClass('unvisit').addClass('visited').text(" ");
    currentSum.sum = 0;
    $('#button').get(0).status = "unclick";
    $('#sort').text(" ");
  };
  addRobotButton = function(currentSum){
    $('#button').get(0).status = 'unclick';
    $('#button').bind('handler', function(event){
      var sequence, i$, i;
      event.stopPropagation();
      if (this.status === 'clicked') {
        return;
      }
      reset(currentSum);
      this.status = 'clicked';
      sequence = [1, 2, 3, 4, 5];
      sequence = randomSequence(sequence);
      showSequence(sequence);
      for (i$ = 0; i$ < 4; ++i$) {
        i = i$;
        $('li' + (":nth-child(" + sequence[i] + ")")).get(0).nextButton = sequence[i + 1];
      }
      $('li' + (":nth-child(" + sequence[4] + ")")).get(0).nextButton = undefined;
      currentSum.sum = 0;
      return $('li' + (":nth-child(" + sequence[0] + ")")).trigger('handler');
    });
    $('#button').click(function(event){
      event.stopPropagation();
      $(this).trigger('handler');
    });
  };
  $.ajaxSetup({
    cache: false
  });
  randomSequence = function(sequence){
    sequence.sort(function(a, b){
      if (Math.random() > 0.2) {
        return 1;
      } else {
        return -1;
      }
    });
    return sequence;
  };
  showSequence = function(sequence){
    var content, i$, len$, x;
    content = new Array();
    for (i$ = 0, len$ = sequence.length; i$ < len$; ++i$) {
      x = sequence[i$];
      content.push(String.fromCharCode(x + 64));
    }
    return $('#sort').text(content.join(' '));
  };
}).call(this);
