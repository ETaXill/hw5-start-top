// Generated by LiveScript 1.3.1
(function(){
  $(function(){
    var bubbles, bar, button, icon, list, message, clickOnBubble, showNumber, changeState, allNumberGot, addUp, init, generateRandomList, showRandomList, showMessage, showError, robot, aHandler, bHandler, cHandler, dHandler, eHandler, bubblesHandler;
    bubbles = $('#control-ring li');
    bar = $('#info-bar');
    button = $('#button');
    icon = $('#icon');
    list = $('#list');
    message = $('#message');
    clickOnBubble = function(certainBubble){
      var little_red_circle, i$, ref$, len$, x;
      certainBubble.state = 'clicked';
      little_red_circle = $(certainBubble).children('div');
      little_red_circle.css('display', 'block').html('...');
      for (i$ = 0, len$ = (ref$ = bubbles).length; i$ < len$; ++i$) {
        x = ref$[i$];
        if (x !== certainBubble && x.state === 'unclicked') {
          $(x).removeClass('enable').addClass('disable');
        }
      }
    };
    showNumber = function(certainBubble, number){
      var little_red_circle;
      little_red_circle = $(certainBubble).children('div');
      little_red_circle.html(number);
      $(certainBubble).removeClass('enable').addClass('disable');
    };
    changeState = function(){
      var i$, ref$, len$, x;
      for (i$ = 0, len$ = (ref$ = bubbles).length; i$ < len$; ++i$) {
        x = ref$[i$];
        if (x.state === 'unclicked') {
          $(x).removeClass('disable').addClass('enable');
        }
      }
    };
    allNumberGot = function(){
      var i$, ref$, len$, x, little_red_circle;
      for (i$ = 0, len$ = (ref$ = bubbles).length; i$ < len$; ++i$) {
        x = ref$[i$];
        little_red_circle = $(x).children('div');
        if (x.state === 'unclicked' || little_red_circle.html === '...') {
          return;
        }
      }
      bar.removeClass('disable').addClass('enable');
    };
    addUp = function(){
      var sum, i$, ref$, len$, x;
      if (bar.hasClass('enable')) {
        sum = 0;
        for (i$ = 0, len$ = (ref$ = bubbles).length; i$ < len$; ++i$) {
          x = ref$[i$];
          sum += parseInt($(x).children('div').html());
        }
      }
      if (!bar.hasClass('disable')) {
        bar.children().html(sum);
        bar.removeClass('enable').addClass('disable');
      }
    };
    (init = function(){
      var i$, ref$, len$, x, little_red_circle;
      for (i$ = 0, len$ = (ref$ = bubbles).length; i$ < len$; ++i$) {
        x = ref$[i$];
        x.state = 'unclicked';
        $(x).removeClass('disable').addClass('enable');
        little_red_circle = $(x).children('div');
        little_red_circle.css('display', 'none');
        bar.children().html('');
      }
      bar.removeClass('enable').addClass('disable');
      icon.addClass('unclicked');
      list.html('');
      message.html('');
    })();
    bubbles.click(function(){
      var this$ = this;
      if ($(this).hasClass('enable') && this.state === 'unclicked') {
        clickOnBubble(this);
        $.get('/', function(number){
          if (this$.state === 'unclicked' || $(this$).hasClass('disable')) {
            return;
          }
          showNumber(this$, number);
          changeState();
          allNumberGot();
        });
      }
    });
    bar.click(function(){
      addUp();
    });
    button.mouseleave(function(){
      init();
    });
    generateRandomList = function(){
      var randomList;
      return randomList = [0, 1, 2, 3, 4].sort(function(){
        return Math.random() - 0.5;
      });
    };
    showRandomList = function(randomList){
      var randomListCharacter, i$, len$, x;
      randomListCharacter = '';
      for (i$ = 0, len$ = randomList.length; i$ < len$; ++i$) {
        x = randomList[i$];
        switch (x) {
        case 0:
          randomListCharacter += 'A&nbsp';
          break;
        case 1:
          randomListCharacter += 'B&nbsp';
          break;
        case 2:
          randomListCharacter += 'C&nbsp';
          break;
        case 3:
          randomListCharacter += 'D&nbsp';
          break;
        case 4:
          randomListCharacter += 'E&nbsp';
        }
      }
      list.html(randomListCharacter);
    };
    showMessage = function(msg){
      message.html(msg).removeClass('error');
    };
    showError = function(msg){
      message.html(msg).addClass('error');
    };
    robot = function(handlers, randomList, index, currentSum){
      var certainBubble;
      certainBubble = bubbles[randomList[index]];
      clickOnBubble(certainBubble);
      $.get('/', function(number){
        if (certainBubble.state === 'unclicked' || $(certainBubble).hasClass('disable')) {
          return;
        }
        showNumber(certainBubble, number);
        changeState();
        allNumberGot();
        currentSum += parseInt(number);
        handlers[randomList[index + 1]](handlers, randomList, index + 1, currentSum);
      });
    };
    aHandler = function(handlers, randomList, index, currentSum){
      var errorNum, error;
      try {
        errorNum = Math.random();
        if (errorNum > 0.8) {
          throw {
            message: '错误：这不是个天大的秘密',
            currentSum: currentSum
          };
        } else {
          showMessage('这是个天大的秘密');
          robot(handlers, randomList, index, currentSum);
        }
      } catch (e$) {
        error = e$;
        showError(error.message);
        bubbles.removeClass('enable').addClass('disable');
      }
    };
    bHandler = function(handlers, randomList, index, currentSum){
      var errorNum, error;
      try {
        errorNum = Math.random();
        if (errorNum > 0.8) {
          throw {
            message: '错误：我并非不知道',
            currentSum: currentSum
          };
        } else {
          showMessage('我不知道');
          robot(handlers, randomList, index, currentSum);
        }
      } catch (e$) {
        error = e$;
        showError(error.message);
        bubbles.removeClass('enable').addClass('disable');
      }
    };
    cHandler = function(handlers, randomList, index, currentSum){
      var errorNum, error;
      try {
        errorNum = Math.random();
        if (errorNum > 0.8) {
          throw {
            message: '错误：你并非不知道',
            currentSum: currentSum
          };
        } else {
          showMessage('你不知道');
          robot(handlers, randomList, index, currentSum);
        }
      } catch (e$) {
        error = e$;
        showError(error.message);
        bubbles.removeClass('enable').addClass('disable');
      }
    };
    dHandler = function(handlers, randomList, index, currentSum){
      var errorNum, error;
      try {
        errorNum = Math.random();
        if (errorNum > 0.8) {
          throw {
            message: '错误：他并非不知道',
            currentSum: currentSum
          };
        } else {
          showMessage('他不知道');
          robot(handlers, randomList, index, currentSum);
        }
      } catch (e$) {
        error = e$;
        showError(error.message);
        bubbles.removeClass('enable').addClass('disable');
      }
    };
    eHandler = function(handlers, randomList, index, currentSum){
      var errorNum, error;
      try {
        errorNum = Math.random();
        if (errorNum > 0.8) {
          throw {
            message: '错误：才怪你妹',
            currentSum: currentSum
          };
        } else {
          showMessage('才怪');
          robot(handlers, randomList, index, currentSum);
        }
      } catch (e$) {
        error = e$;
        showError(error.message);
        bubbles.removeClass('enable').addClass('disable');
      }
    };
    bubblesHandler = function(handlers, randomList, index, currentSum){
      showMessage('楼主异步调用战斗力感人，目测不超过' + currentSum);
      addUp();
    };
    icon.click(function(){
      var randomList, currentSum, handlers, error;
      if (!icon.hasClass('unclicked')) {
        return;
      }
      init();
      icon.removeClass('unclicked');
      randomList = generateRandomList();
      randomList.push(5);
      showRandomList(randomList);
      currentSum = 0;
      handlers = [aHandler, bHandler, cHandler, dHandler, eHandler, bubblesHandler];
      try {
        handlers[randomList[0]](handlers, randomList, 0, currentSum);
      } catch (e$) {
        error = e$;
        showError(error.message);
      }
    });
  });
}).call(this);
